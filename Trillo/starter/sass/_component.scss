///////////////////////////////////////////////
// LOGO
.logo {
	height: 3.25rem;
	margin-left: 3rem;
}

///////////////////////////////////////////////
// SEARCH
.search {
	flex: 0 0 40%;
	background-color: var(--color-grey-light-2);

	// NESTED FLEX!
	display: flex;
	align-items: center;
	justify-content: center;

	@media only screen and (max-width: $bp-large) {
		font-size: 50%;
	}

	@media only screen and (max-width: $bp-smallest) {
		order: 1;
		flex: 0 0 100%;
	}

	&__input {
		// input elem DOES NOT automatically inherit based on the global document for either of these:
		font-family: inherit;
		font-size: inherit;
		color: inherit;
		background-color: var(--color-grey-light-2);
		border: none;
		padding: .7rem 2rem;
		border-radius: 110px;
		width: 90%;
		transition: all .2s;

		// this way btn will move on top of the input
		margin-right: -3.5rem;

		&:focus {
			outline: none;
			width: 100%;
			background-color: var(--color-grey-light-3);
		}

		// chrome and safari browsers
		&::-webkit-input-placeholder {
			font-weight: 100;
			color: var(--color-grey-light-4);
		}
	}

	// checkbox hack by selecting the adjacent elem (sibling) based on pseudo state
	&__input:focus + &__button {
		background-color: var(--color-grey-light-3);
	}

	&__button {
		border: none;
		background-color: var(--color-grey-light-2);

		&:focus {
			outline: none;
		}

		&:active {
			transform: translateY(2px);
		}
	}

	&__icon {
		height: 2rem;
		width: 2rem;

		// this declaration changes the actual SVG color
		fill: var(--color-grey-dark-3);
	}
}

///////////////////////////////////////////////
// USER NAVIGATION
.user-nav {

	// this over-rides the cross-axis centering we did in the .header class
	align-self: stretch;

	display: flex;
	align-items: center;

	// user nav AND all of the direct children
	& > * {
		padding: 0 2rem;
		cursor: pointer;
		height: 100%;

		display: flex;
		// aligns items along CROSS axis, which is usually vertically
		align-items: center;
	}

	& > *:hover {
		background-color: var(--color-grey-light-2);
	}

	&__icon-box {
		position: relative;
	}

	&__icon {
		height: 2.25rem;
		width: 2.25rem;
		color: var(--color-grey-dark-2);
	}

	&__notification {
		font-size: .8rem;
		height: 1.75rem;
		width: 1.75rem;
		background-color: var(--color-primary);
		border-radius: 50% ;
		color: #fff;
		position: absolute;
		top: 1.5rem;
		right: 1.1rem;

		//this is how I tried to center the little numbers in the notification bubbles AND I FUCKIN NAILED IT
		display: flex;
		justify-content: center;
		align-items: center;
		
	}

	&__user-photo {
		height: 3.75rem;
		width: 3.75rem;
		border-radius: 50%;
		margin-right: 1rem;
	}
}

///////////////////////////////////////////////
// SIDE NAVIGATION
.side-nav {
	font-size: 1.4rem;
	list-style: none;
	margin-top: 3.5rem;

	@media only screen and (max-width: $bp-medium) {
		display: flex;
		margin: 0;
	}
	////////////////////////// ANIMATION FOR SIDE NAV
	// parent set to relative so psuedo is relative to it
	&__item {
		position: relative;

		// HOW TO: add margin to the bottom of ALL the items EXCEPT the last one
		&:not(:last-child) {
			margin-bottom: .5rem;

			@media only screen and (max-width: $bp-medium) {
				margin: 0;
			}
		}


		// this is to make the menu items now along top evenly spaced in fourths
		@media only screen and (max-width: $bp-medium) {
			flex: 1;
		}
	}

	// pseudo elem used for hover nav item animation
	&__item::before {
		// ALWAYS need content
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 3px;
		background-color: var(--color-primary);

		// set here in the "normal" state as 0
		transform: scaleY(0);
		//duration for anime
		// width makes anime full width, prev just a line to left of each ul
		transition: transform .2s,
					width .4s cubic-bezier(1,0,0,1) .2s,
					background-color .1s;

		// make anime full width, prev just a line to left of each ul
		width: 100%;

		// default is center, controls where anime begins
		// transform-origin: bottom;

	}

	&__item:hover::before,
	&__item--active::before {
		transform: scaleY(1);

		// make if for the ENTIRE ul, prev just a line to the left of each ul
		width: 100%;
	}

	&__item:active::before {
		background-color: (--color-primary-light);
	}
	
	&__link:link,
	&__link:visited {
		color: var(--color-grey-light-1);
		text-decoration: none;
		text-transform: uppercase;
		display: block;

		// padding: top/bottom left/right;
		padding: 1.5rem 3rem;

		// HOW TO: align icons with rows
		display: flex;
		align-items: center;

		position: relative;
		z-index: 10;

		@media only screen and (max-width: $bp-medium) {
			justify-content: center;
			padding: 2rem;
		}

		@media only screen and (max-width: $bp-small) {
			flex-direction: column;
			padding: 1.5rem .5rem;
		}
	}

	&__icon {
		// NOTE: usually size SVGs as SQUARES
		width: 1.75rem;
		height: 1.75rem;
		margin-right: 2rem;

		// currentColor is the current color being used or the PARENT (in this case, made --color-grey-light-1 as above ^^
		fill: currentColor;

		@media only screen and (max-width: $bp-small) {
			margin: 0;
			margin-bottom: .7rem;
			width: 1.5rem;
			height: 1.5rem;
		}
	}
}

///////////////////////////////////////////////
// LEGAL

.legal {
	text-align: center;
	font-size: 1.2rem;
	color: var(--color-grey-light-4);
	padding: 2.5rem;

	@media only screen and (max-width: $bp-medium) {
		display: none;
	}
}

///////////////////////////////////////////////
// GALLERY

.gallery {
	display: flex;

	&__photo {
		width: 100%;
		display: block;
	}
}

///////////////////////////////////////////////
// HOTEL OVERVIEW

.overview {
	// good habit: set display to flex here in the parent before the &'s
	display: flex;
	align-items: center;
	border-bottom: var(--line);

	&__heading {
		font-size: 2.25rem;
		font-weight: 300;
		text-transform: uppercase;
		letter-spacing: 1px;
		padding: 1.5rem 3rem;

		@media only screen and (max-width: $bp-small) {
			font-size: 1.8rem;
			padding: 1.25rem 2rem;
		}
	}

	&__stars {
		// to add a space in the middle this WORKS but also makes the elem HUGE
		// flex: 1;

		// HOW TO: give a GIANT SPACE between elems in flexbox, neat!!!! while only occupying the space it needs
		margin-right: auto;
		display: flex;
	}

	&__icon-star,
	&__icon-location {
		width: 1.75rem;
		height: 1.75rem;
		fill: var(--color-primary)
	}

	&__location {
		font-size: 1.2rem;
		display: flex;
		align-items: center;
	}

	&__icon-location {
		margin-right: .5rem;
	}

	&__rating {
		background-color: var(--color-primary);
		margin-left: 3rem;
		color: #fff;

		// HOW TO: strech all the way from top to bottom, overrides the align-items on line 279
		align-self: stretch;
		padding: 0 2.25rem;

		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;

		@media only screen and (max-width: $bp-small) {
			padding: 0 1.5rem;
		}
	}

	&__rating-count {
		text-transform: uppercase;
		font-size: .8rem;

		@media only screen and (max-width: $bp-small) {
			font-size: .5rem;
		}
	}
	
	&__rating-average {
		font-weight: 300;
		font-size: 2.25rem;
		margin-bottom: -.6rem;

		@media only screen and (max-width: $bp-small) {
			font-size: 1.8rem;
		}
	}
}

///////////////////////////////////////////////
// btn INLUNE

.btn-inline {
	border: none;
	color: var(--color-primary);
	font-size: inherit;
	border-bottom: 1px solid currentColor;
	padding-bottom: 2px;
	display: inline-block;
	background-color: transparent;
	cursor: pointer;
	transition: .2s;

	// for SHOW ALL BTN
	& span {
		margin-left: 3px;

		// needed for animation
		transition: margin-left .2s;
	}
	
	&:hover {
		color: var(--color-grey-dark-1);
		
		// for SHOW ALL BTN
		& span {
			margin-left: 8px;
		}
	}

	&:focus {
		outline: none;

		//pulsate is the name of the animate, then speed and then duration
		animation: pulsate 1s infinite;
	}
}

@keyframes pulsate {
	// what happens at begiining NOTHING
	0% {
		transform: scale(1);
		box-shadow: none;
	}
	
	// what happens at MIDDLE gets bigger, and box shadow
	50% {
		transform: scale(1.05);
		box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
	}
	// what happens at
	100% {
		transform: scale(1);
		box-shadow: none;
	}

}

///////////////////////////////////////////////
// paragraph

// NOTE last-of-type instead of last-child, coz ul is the last chile in container
.paragraph:not(:last-of-type) {
	margin-bottom: 2rem;
}

///////////////////////////////////////////////
// LIST

.list {
	// topbottom	leftright
	margin: 3rem 0;
	padding : 3rem 0;
	list-style: none;
	border-top: var(--line);
	border-bottom: var(--line);

	display: flex;
	flex-wrap: wrap;

	&__item {
		// HOW TO: setting it to 50% below effectively divided up the li into TWO columns!! neat
		// no grow	no shrink	take up 50% of container
		flex: 0 0 50%;
		margin-bottom: .7rem;

		display: flex;
		align-items: center;

	}
	// HOW TO: Icon in CSS!!!
	&__item::before {
		// NOTE: this was NOT working before this line:
		content: "";
		display: inline-block;
		height: 1rem;
		width: 1rem;
		margin-right: .7rem;

		// Older browsers:

		// background-image: url(../img/chevron-thin-right.svg);
		// background-size: cover;

		// Newer browsers - MASKS! :
		// used MASKS coz we could not change the COLOR of the icon via css...
		background-color: var(--color-primary);
		-webkit-mask-image: url(../img/chevron-thin-right.svg);
		-webkit-mask-size: cover;
	}
}

///////////////////////////////////////////////
// RECOMMEND

.recommend {
	font-size: 1.3rem;
	color: var(--color-grey-dark-3);

	display: flex;

	// centers all elems on horz axis
	align-items: center;

	

	&__photo {
		// border-box includes the padding and the border into the width and the height of the element, so content-box sets it back to default to make them larger 
		box-sizing: content-box;
		height: 4rem;
		width: 4rem;

		// makes photos round like 'profile pics'
		border-radius: 50%;

		// negative margin to make the profile pics overlap EXCEPT LAST 
		&:not(:last-child) {
			margin-right: -2rem;
		}

		// adding the border makes the pics 'smaller' so fix this with box-sizing: content-box
		border: 3px solid white;
		
	}

	&__count {
		// HOW TO: 
		// !!TRICK!! to push other elem to the opposide side:
		margin-right: auto;
	}

	&__friends {
		// FIX; this insures the 4 circular photos of people stay together as screen gets smaller
		display: flex;
	}
}

///////////////////////////////////////////////
// REVIEWS

.review {
	width: 100%;
	background-color: #fff;
	// box-shadow: 0 2rem 6rem rgba(0,0,0,.06);
	box-shadow: var(--shadow-dark);
	padding: 3rem;
	margin-bottom: 3.5rem;
	
	// must always be declared on parent for abs to work below
	position: relative;
	
	// since quotes were going outside of container
	overflow: hidden;
	
	// IN GENERAL, as the break points and screen size get smaller, so should margins and padding
	@media only screen and (max-width: $bp-medium) {
		margin-bottom: 3rem;
		padding: 2rem;
	}

	&__text {
		margin-bottom: 2rem;

		//z-index ONLY works if you set position
		z-index: 10;
		position: relative;
	}

	&__user {
		display: flex;
		align-items: center;
	}

	&__photo {
		height: 4.5rem;
		width: 4.5rem;
		border-radius: 50%;
		margin-right: 1.5rem;
	}

	&__user-box {
		margin-right: auto;
	}

	&__user-name {
		text-transform: uppercase;
		font-size: 1.1rem;
		font-weight: 600;
		margin-bottom: .4rem;
	}
	
	&__user-date {
		font-size: 1rem;
		color: var(--color-grey-dark-3);

	}

	&__rating {
		color: var(--color-primary);
		font-size: 2.2rem;
		font-weight: 300;
	}

	&::before {
		content: "\201C";
		
		// to put the '' in the upper left corner
		position: absolute;
		top: -2.75rem;
		left: -1rem;
		line-height: 1;
		font-size: 20rem;
		color: var(--color-grey-light-2);
		font-family: sans-serif;

		// set smaller z0ndex
		// calc(infinity) for z-index arms race, learned from TLDR dev. Neat!!
		z-index: calc(infinity);
	}
}

///////////////////////////////////////////////
// CTA

.cta {
	padding: 3.5rem 0;
	text-align: center;

	@media only screen and (max-width: $bp-medium) {
		padding: 2.5rem 0;
	}

	&__book-now {
		text-transform: uppercase;
		font-size: 2rem;
		font-weight: 300;
		margin-bottom: 2.5rem;
	}
}

///////////////////////////////////////////////
// CTA

.btn {
	text-transform: uppercase;
	font-size: 1.5rem;
	font-weight: 300;
	border: none;
	border-radius: 100px;
	background-image: linear-gradient(to right, var(--color-primary), var(--color-primary-dark));
	color: #fff;
	position: relative;

	// for the 'invisible' span above
	overflow: hidden;
	cursor: pointer;

	// select ALL of the child elems
	// using this selector to keep code DRY
	& > * {
		display: inline-block;
		height: 100%;
		width: 100%;
		transition: all .2s;
	}

	&__visible {
		padding: 2rem 7.5rem;

	}
	
	&__invisible {
		position: absolute;
		left: 0;
		padding: 2rem 0;

		// h x w 100% means one hundo of parent elem
		
		top: -100%;
	}
	
	&:hover {
		// HOW TO: fade of a color into another
		background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
	}

	&:hover &__visible{
		// we don't use top here coz elem is not absolute positioned
		transform: translateY(100%);
	}

	&:hover &__invisible{
			// opposite of top above, don't forget the trans!!
			top: 0;
	}

	&:focus {
		outline: none;
		animation: pulsate 1s infinite;
	}
}